"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
import environ
# import django_heroku

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-7z2m5qf*28c!_$3mwgg&c*fbs6@of(&z98t(uy4#!ggk87_8&v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    #my apps
    'user.apps.UserConfig',
    'product.apps.ProductConfig',
    'cart.apps.CartConfig',
    
    'rest_framework',
    'chartjs',
    'jazzmin',
    # "semantic_admin",

    'corsheaders',
    'crispy_forms',
    'modeltranslation',

    #django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware', # translation
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware', 
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'cart.middleware.SetCartSessionKeyMiddleware', # cart for unregistered users
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
                os.path.join(BASE_DIR, 'templates'),
                ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.i18n', # translation
                'django.contrib.messages.context_processors.messages',
                'cart.views.cart_context',
                'user.views.check_cart_context',
                'user.views.social_links_context',
            ],
        },
    },
]
TEMPLATE_STRING_IF_INVALID = 'Invalid variable'

WSGI_APPLICATION = 'project.wsgi.application'


# Initialise environment variables
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))



# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'ipay',
        'USER': 'postgres',
        'PASSWORD': env('DB_PASS'),
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# 'ENGINE': 'django.db.backends.sqlite3',
# 'NAME': BASE_DIR / 'db.sqlite3',

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
# django-admin makemessages -l ar
# django-admin compilemessages -l ar

LANGUAGE_CODE = 'en'

TIME_ZONE = 'Africa/Cairo'

USE_I18N = True

USE_TZ = True

LANGUAGES = [
    ('ar', ('Arabic')),
    ('en', ('English')),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]


MODELTRANSLATION_DEFAULT_LANGUAGE = 'en'

MODELTRANSLATION_LANGUAGES = ('en', 'ar')


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / "static"

STATICFILES_DIRS = [
    BASE_DIR / 'project/static',
    ]
#STATICFILES_STORAGE = "django.contrib.staticfiles.storage.ManifestStaticFilesStorage"

MEDIA_URL =  '/media/'
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#===================================
AUTH_USER_MODEL = 'user.MyUser'

CORS_ORIGIN_ALLOW_ALL=True

CART_SESSION_ID_KEY = 'user_cart_id'


LOGIN_URL= '/login'
LOGIN_REDIRECT_URL  = '/'
LOGOUT_REDIRECT_URL = '/'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER ='smarthospitalsystem2022@gmail.com'
EMAIL_HOST_PASSWORD = 'hifckphfjffbtbbq'
EMAIL_USE_TLS = True
EMAIL_PORT = 587


GOOGLE_CLIENT_ID = ""
SOCIAL_SECRET = ""

# # google auth
# SOCIAL_SECRET='@6p-h7#oy4unyb4+('
# GOOGLE_CLIENT_ID="279543566018-llpc24mgfg7ood9f3c94sl0ee65t97jk.apps.googleusercontent.com"
# GOOGLE_CLIENT_SECRET="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"


JAZZMIN_SETTINGS = {
    
    "site_title": "I-Pay",
    "site_logo": "img/logo.png",
}




CHARGE_PRICE = 50


# django_heroku.settings(locals())